version: '3.8'

services:
  # Bases de datos
  neo4j:
    build:
      context: ./
      dockerfile: ./databases/neo4j/Dockerfile
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_server_default__listen__address=0.0.0.0
      - NEO4J_server_bolt_listen__address=0.0.0.0:7687
      - NEO4J_server_bolt_advertised__address=0.0.0.0:7687
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:7474/browser/"]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:  # Añadir red
      - jotun-network

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    volumes:
      - ./databases/cassandra/data:/var/lib/cassandra
    environment:
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mongodb:
    build:
      context: ./
      dockerfile: ./databases/mongodb/Dockerfile
    ports:
      - "27017:27017"
    volumes:
      - ./databases/mongodb/data:/data/db
      - ./assets/collections:/docker-entrypoint-initdb.d/data
    environment:
      - MONGO_INITDB_DATABASE=jotun_wiki
    networks:
      - jotun-network

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"  # Redis core
      - "8001:8001"  # RedisInsight
    volumes:
      - ./databases/redis/data:/data

  # Servicios de aplicación
  editor-service:
    build: ./services/editor-service
    depends_on:
      neo4j:
        condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    volumes:
      - ./services/editor-service:/app
      - /app/node_modules
    networks:
      - jotun-network

  leaderboard-service:
    build: ./services/leaderboard-service
    depends_on:
      cassandra:
        condition: service_healthy
    ports:
      - "8082:8080"
    environment:
      - CASSANDRA_CONTACT_POINTS=cassandra
      - CASSANDRA_PORT=9042
      - CASSANDRA_KEYSPACE=jotun_lair
      - CASSANDRA_REPLICATION_FACTOR=3
    volumes:
      - ./services/leaderboard-service:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  wiki-service:
    build:
      context: ./services/wiki-service
      dockerfile: ./Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/jotun_wiki
      - PORT=8080
    volumes:
      - ./services/wiki-service:/app
      - /app/node_modules
    networks:
      - jotun-network

  avatar-service:
    build: ./services/avatar-service
    depends_on:
      - redis
    ports:
      - "8084:8080"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOAD_AVATARS_ON_STARTUP=true
      - METADATA_FILE=/app/assets/metadata.json
    volumes:
      - ./services/avatar-service:/app
      - ./assets/avatars:/app/assets/avatars
      - ./assets:/app/assets
      - /app/node_modules

volumes:
  neo4j_data:
  cassandra_data:
  mongo_data:
  redis_data:
  
networks:
  jotun-network:
    driver: bridge
